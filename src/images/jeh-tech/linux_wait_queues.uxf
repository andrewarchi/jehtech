<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>14</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>630</y>
      <w>266</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*wait_queue_t*
&lt;&lt;include/linux/wait.h&gt;&gt;
--
flags :uint
private: void*
func: wait_queue_func_t
task_list: list_head</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>476</x>
      <y>784</y>
      <w>238</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>list_head
--
next: *list_head
prev: *list_head
bg=gray
fg=white
transparency=0
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1064</x>
      <y>784</y>
      <w>238</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>list_head
--
next: *list_head
prev: *list_head
bg=gray
fg=white
transparency=0
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>630</y>
      <w>266</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*wait_queue_t*
&lt;&lt;include/linux/wait.h&gt;&gt;
--
flags :uint
private: void*
func: wait_queue_func_t
task_list: list_head</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>994</x>
      <y>812</y>
      <w>98</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>812</y>
      <w>182</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>840</y>
      <w>182</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>994</x>
      <y>840</y>
      <w>98</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>56</x>
      <y>700</y>
      <w>1330</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>890.0;110.0;930.0;110.0;930.0;160.0;10.0;160.0;10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>42</x>
      <y>672</y>
      <w>1358</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0;10.0;190.0;950.0;190.0;950.0;110.0;900.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>126</x>
      <y>532</y>
      <w>266</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>*wait_queue_head_t*
&lt;&lt;include/linux/wait.h&gt;&gt;
--
lock: spinlock_t
task_list: list_head
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>644</y>
      <w>238</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>list_head
--
next: *list_head
prev: *list_head
transparency=0
layer=3


bg=gray
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>700</y>
      <w>140</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0;40.0;110.0;80.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>672</y>
      <w>140</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>80.0;110.0;50.0;110.0;50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>784</y>
      <w>238</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>list_head
--
next: *list_head
prev: *list_head
lt=..
bg=gray
fg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>756</x>
      <y>630</y>
      <w>266</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*wait_queue_t*
&lt;&lt;include/linux/wait.h&gt;&gt;
--
flags :uint
private: void*
func: wait_queue_func_t
task_list: list_head
lt=..
fg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>196</x>
      <y>154</y>
      <w>434</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>The queue head acts like the "anchor" for the linked list of wait_queue_t objects. It is the structure from which the queue will be accessed and defines the first link to the start of the queue as well as a spinlockthat is used to protect against concurrent access.

Can declare statically using:
    DECLARE_WAIT_QUEUE_HEAD(queue)
bg=dark_gray
fg=white
lw=3
style=wordwrap
transparency=0</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>364</y>
      <w>196</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>756</x>
      <y>280</y>
      <w>434</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>The wait_queue_t object represents a kthread that is waiting on a condition. When the condition is met, all of the kthreads in this list will be "woken up"...

Can declare statically using:
   DECLARE_WAITQUEUE(wait, current)
Where "current" is a special macro that resolves to the currently running process.
bg=dark_gray
fg=white
lw=3
style=wordwrap
transparency=0</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>714</x>
      <y>490</y>
      <w>280</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;180.0;10.0</additional_attributes>
  </element>
</diagram>
